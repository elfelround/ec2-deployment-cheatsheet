https://www.youtube.com/watch?v=Sa_kQheCnds

12:19 hostnamectl set-hostname <what-ever>  //hostname to check why needed: https://www.youtube.com/redirect?stzid=UgzEGCnUfv1hYlurmjp4AaABAg.8qcG74-5s7k8qcLmDRWslR&q=https%3A%2F%2Fstackoverflow.com%2Fquestions%2F38560196%2Fwhy-do-you-need-to-change-the-hostname-of-your-ec2-instance&event=comments&redir_token=-duGMPPlZ84_G_NK8hYfqNsnymJ8MTU0ODcxMjM5NEAxNTQ4NjI1OTk0
12:52 nano ect/hosts //setting host name in host file //writing ip address of our server, same we use for ssh
13:49 666.666.666 +TAB <servername>
14:27 adduser  <whatevername> // limited user
// adduser OR gpasswd? adduser is distro specific and usses gpasswd under the hood https://unix.stackexchange.com/questions/198536/difference-between-adding-sudo-user-with-adduser-or-gpasswd
// gpasswd used here https://simpleisbetterthancomplex.com/tutorial/2016/10/14/how-to-deploy-to-digital-ocean.html
15:21 adduser <whatevername> sudo // ading sudo group so it can actually use sudo command (yet not execute sudo by default)
exit
15:51 ssh root@... > ssh <limiteduser>@... //ssh logout and login back with new limited user
ssh keys making***
18:29 mkdir  ~/.ssh // starting to create keyfiles loging instead of password for ssh
//timeskip making sshkeys
26:57 sudo apt-get install ufw  **firewall starts here
27:22 sudo ufw default allow outgoing
 sudo ufw default deny incoming // can lock you out if not ssh specified!
sudo ufw allow ssh //even with this i was locked out, had to add port 20
28:11 sudo ufw allow 8000
28:40 sudo ufw enable // enabling rules
-on local
30:20 source <path>  // activating environment, also comments he made a requirements.txt for the environment
pip freeze
pip freeze > requirements.txt
33:38 scp -r <folder> <user>@<ip>:<path of destination pe:~/> //copying project with bash, mentions alternatives git or filezilla
**on remote starts with venv etc
34:58 sudo apt-get python3-pip python3-venv
36:05 python3 -m venv <folder destination>/<nameovenv>    //creating venv in a specific location with py3 interpreter
36:43 source venv/bin/activate // made a cd first
37:13 pip install -r (expected requirements) requirements.txt
38:38 changes ALLOWED_HOSTS and puts our server ip
39:20 STATIC_ROOT os.path.join(BASE_DIR... // since dj handles static dif in production
40:07 python manage.py collectstatic // also makes our static folder
40:48 python manage.py runserver 0.0.0.0:8000 // runserver for dev, crud seems to work
43:48 // reset pasword testing fails since we havent copied venv with emailserver and password, i guess he means env variables
44:25 // killing server
cd
45:28 sudo apt-get apache2
45:55 sudo apt-get libapache2-mod-wsgi-py3
46:15 cd /etc/apache2/sites-available/    // configuring apache server
ls  //all of these are config files, we will select one and copy to .conf
46:55 sudo cp 000-default.conf django_project.conf  // using a copy of the default configuration file
47:25  django_project.conf //edit to where it it meets our need
48:12 Alias /static /home/<username>/<project>/static    // using alias to tell apache to map requests with static to our static folder
49:22 <Directory ...
49:45 // same with media
50:45 Directory  Files wsgi.py   Require all granted  //granting access to wsgi
52:23 WSGIScriptAlias /(indicates rooturl) /home/username/projectname/projectname/wsgi.py (wsgi path)
52:36 WSGIDaemonProcess ....
timeskip
56:15 sudo chown :www-data(this is the apacheuser) <projectname>/db.sqlite3 // granting priviledges to apache so it changes db
sudo chmod 664 <projectname>/db.sqlite3 (owner group everyone)
57:21 sudo chown :www-data(this is the apacheuser) <projectname>/
ls -la   //see permissions
58:00 sudo chown -R(for recursive) :www-data django_project/media/
58:44 sudo chmod -R 775 django_project/media/
59:11 // mentions we wont be using env vars cause apache is shit at it, we will be using config.json instead
sudo touch /etc/config.json  // can add inbetween folder in case we have several apps
1:00:19 sudo nano to settings.py grab secret key
1:01:39 editing the config.json to have the secret key we took, also putting EMAIL_USER eMAIL_PASS
1:03:30 import json with open('etc/...') json.load // and loading json
1:05:18 DEBUG = False
1:05:58 changing os.environ.get for config.get
timeskip
1:12:55 sudo chmod 775 django_project/   //our parent dir to db didnt have group write perms and was conflicting writing of crud
sudo service apache2 restart  //now crud works
1:16:03 // recommending django deployment checklist url


